<Window x:Class="Choices.MaxEmissions"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Choices"
        mc:Ignorable="d"
        Title="Максимальные выбросы" Height="400" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="80"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="230"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        
        <Label 
            Content="Максимальные выбросы"
            Grid.Row="1"
            Grid.Column="1"
            Grid.ColumnSpan="5"
            FontSize="20" 
            FontFamily="Mustica Pro SemBd"
            VerticalAlignment="Bottom"/>
        
        <DataGrid 
            x:Name="minEmissions"
            Grid.Column="1" 
            Grid.Row="3" 
            Grid.ColumnSpan="5"  
            d:ItemsSource="{d:SampleData ItemCount=5}"/>
        <Button 
            x:Name="BackButton"
            Grid.Column="6"
            Grid.Row="0"
            Click="backClick"
            Margin="15,0,15,0"
            Style="{DynamicResource ButtonMenuPis}" >
            <Image Source="Imag/back" Height="25" Width="25"/>
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="White"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#F0FFF0"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#F0FFF0"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="White"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="White"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="ButtonMenuPis" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        
    </Grid>
</Window>
